<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>RexKing6&#39;s Note</title>
    <link>http://yoursite.com/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description></description>
    <pubDate>Tue, 28 Mar 2017 06:55:17 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>hexo绑定阿里云二级域名</title>
      <link>http://yoursite.com/2017/03/28/hexo%E7%BB%91%E5%AE%9A%E9%98%BF%E9%87%8C%E4%BA%91%E4%BA%8C%E7%BA%A7%E5%9F%9F%E5%90%8D/</link>
      <guid>http://yoursite.com/2017/03/28/hexo%E7%BB%91%E5%AE%9A%E9%98%BF%E9%87%8C%E4%BA%91%E4%BA%8C%E7%BA%A7%E5%9F%9F%E5%90%8D/</guid>
      <pubDate>Tue, 28 Mar 2017 06:32:07 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;昨天总算在GitHub搭起来了自己的博客，但是在GitHub下总是有些不爽，想绑定在自己阿里云买的一个域名。&lt;/p&gt;
&lt;h2 id=&quot;阿里云
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>昨天总算在GitHub搭起来了自己的博客，但是在GitHub下总是有些不爽，想绑定在自己阿里云买的一个域名。</p>
<h2 id="阿里云解析"><a href="#阿里云解析" class="headerlink" title="阿里云解析"></a>阿里云解析</h2><p>来到阿里云控制台 -&gt; 云解析：</p>
<p><img src="/2017/03/28/hexo绑定阿里云二级域名/hexo_1.png" alt="控制台"></p>
<p>打开要绑定的域名，来到域名控制台：</p>
<p><img src="/2017/03/28/hexo绑定阿里云二级域名/hexo_2.png" alt="添加解析"></p>
<p>记录类型选择CNAME，主机记录填二级域名，比如blog.rexking6.top就填blog，记录值填之前GitHub映射的那个网址，我的是<code>rexking6.github.io</code>，点击保存。</p>
<h2 id="项目里添加CNAME"><a href="#项目里添加CNAME" class="headerlink" title="项目里添加CNAME"></a>项目里添加CNAME</h2><p>到这里还没结束，需要在GitHub的项目里添加CNAME文件，填写你的二级域名，比如我的就是blog.rexking6.top。</p>
<p><img src="/2017/03/28/hexo绑定阿里云二级域名/hexo_3.png" alt="CNAME"><br>这里不建议直接在GitHub上直接添加，因为本地同步过去的时候，又会把CNAME删除了，所以还是在本地添加后，同步。这里添加CNAME的位置是：<strong>source里，与_posts同级</strong>。</p>
<p>这样之后，就可以顺利地通过你自己的域名访问到hexo博客了。</p>
]]></content:encoded>
      
      <comments>http://yoursite.com/2017/03/28/hexo%E7%BB%91%E5%AE%9A%E9%98%BF%E9%87%8C%E4%BA%91%E4%BA%8C%E7%BA%A7%E5%9F%9F%E5%90%8D/#disqus_thread</comments>
    </item>
    
    <item>
      <title>hexo的图片以及图床</title>
      <link>http://yoursite.com/2017/03/28/hexo%E7%9A%84%E5%9B%BE%E7%89%87%E4%BB%A5%E5%8F%8A%E5%9B%BE%E5%BA%8A/</link>
      <guid>http://yoursite.com/2017/03/28/hexo%E7%9A%84%E5%9B%BE%E7%89%87%E4%BB%A5%E5%8F%8A%E5%9B%BE%E5%BA%8A/</guid>
      <pubDate>Tue, 28 Mar 2017 00:59:50 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;hexo要插入图片一般有两种方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;存储在本地的网站文件夹&lt;/li&gt;
&lt;li&gt;使用图床，插入时用外链url即可&lt;/
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>hexo要插入图片一般有两种方式：</p>
<ul>
<li>存储在本地的网站文件夹</li>
<li>使用图床，插入时用外链url即可</li>
</ul>
<h2 id="本地"><a href="#本地" class="headerlink" title="本地"></a>本地</h2><p>先说第一种，hexo本地和上传到GitHub后的目录结构不相同，所以这路径是比较难编写的。要想最后部署后能看到图片，在本地写markdown时，图片就会显示失败。有没有什么两全其美的方法呢？有。</p>
<h2 id="hexo-asset-image"><a href="#hexo-asset-image" class="headerlink" title="hexo-asset-image"></a>hexo-asset-image</h2><p>先将 _config.yml 的post_asset_folder改为true，然后运行以下命令：</p>
<pre><code>npm install https://github.com/CodeFalling/hexo-asset-image --save
</code></pre><p>安装完成后，新建文章后，将会是这种结构：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">hexo搭建github技术博客</div><div class="line">├── hexo_1.png</div><div class="line">└── hexo_2.png</div><div class="line">hexo搭建github技术博客.md</div></pre></td></tr></table></figure>
<p>这样的目录结构（目录名和文章名一致），只要使用 <code>![图片名称](hexo搭建github技术博客/hexo_1.png)</code>就可以插入图片。</p>
<p>同时，生成的 html 是</p>
<pre><code>&lt;img src=&quot;/2017/03/27/hexo搭建github技术博客/hexo_1.png&quot; alt=&quot;查询福昕&quot;&gt;
</code></pre><p>而不是之前丑陋的相对链接。</p>
<p>另外，值得一提的是，这个插件对于 CodeFalling/hexo-renderer-org 同样有效。以上的内容参考 <a href="http://www.tuicool.com/articles/umEBVfI" target="_blank" rel="external">在 hexo 中无痛使用本地图片</a> 。</p>
<h2 id="七牛云图床"><a href="#七牛云图床" class="headerlink" title="七牛云图床"></a>七牛云图床</h2><p>看网上很多人都推荐七牛云，我自己没用过别的，就直接用了。每个月有10G免费，我的博客应该没人来看，是够用的。</p>
<p>注册，新建存储空间</p>
<p><img src="/2017/03/28/hexo的图片以及图床/hexo_1.png" alt="新建存储空间"></p>
<p>然后是镜像存储，什么是镜像存储呢？</p>
<p>镜像存储是指你网站的数据在存储在自己服务器上的情况下，额外使用七牛云存储作为镜像服务器，让网站的用户每次访问的时候都从七牛云存储上读取。如果七牛云存储上没有用户需要读取的数据，则七牛的服务器会从源站拉取资源，然后再返回给网站的用户。</p>
<p>网站上的图片，CSS，JS 这些文件一般都是不太修改，使用镜像存储把这些静态文件资源镜像到七牛的服务器，网站用户访问的时候就直接从七牛的服务器上读取数据，这样可以<strong>大大降低网站服务器读取数据的压力和大大提高网站的速度</strong>，并且并不影响博客的原来使用体验，原来怎么上传图片还是继续在网站中怎么操作即可。</p>
<p><img src="/2017/03/28/hexo的图片以及图床/hexo_2.png" alt="镜像存储"></p>
<p>镜像源填自己的网站，这样设定之后，每次更新网站的内容后，就可以通过<strong>七牛云给的三级域名+相同路径</strong>访问到自己网站的相同内容（我的是<code>onh78q2s5.bkt.clouddn.com</code>）。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>关于图片的使用方法，就写到这里，对七牛云这家公司突然心生敬佩，刚好在春招，投一发实习简历去！</p>
]]></content:encoded>
      
      <comments>http://yoursite.com/2017/03/28/hexo%E7%9A%84%E5%9B%BE%E7%89%87%E4%BB%A5%E5%8F%8A%E5%9B%BE%E5%BA%8A/#disqus_thread</comments>
    </item>
    
    <item>
      <title>hexo搭建github技术博客</title>
      <link>http://yoursite.com/2017/03/27/hexo%E6%90%AD%E5%BB%BAgithub%E6%8A%80%E6%9C%AF%E5%8D%9A%E5%AE%A2/</link>
      <guid>http://yoursite.com/2017/03/27/hexo%E6%90%AD%E5%BB%BAgithub%E6%8A%80%E6%9C%AF%E5%8D%9A%E5%AE%A2/</guid>
      <pubDate>Mon, 27 Mar 2017 11:54:13 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;之前在CSDN写过几篇博客，但是一直觉得界面不够简洁，写博客的时候不太爽，想自己搭个人博客写，趁这个机会接触了hexo，记录下来。&lt;/p&gt;

      
      </description>
      
      <content:encoded><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>之前在CSDN写过几篇博客，但是一直觉得界面不够简洁，写博客的时候不太爽，想自己搭个人博客写，趁这个机会接触了hexo，记录下来。</p>
<p>PS: 以下过程是以Windows系统，大多数参考<a href="http://www.jianshu.com/p/701b1095da11" target="_blank" rel="external">手把手教你建github技术博客</a>，我按照自己的实际情况重新整理了一下。用Mac OS的同学可以参考<a href="http://www.jianshu.com/p/e99ed60390a8" target="_blank" rel="external">20分钟教你使用hexo搭建github博客</a>。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>下载 <a href="https://git-scm.com/downloads" target="_blank" rel="external">git</a> 和 <a href="https://nodejs.org/en/download" target="_blank" rel="external">Node.js</a> 并执行安装</p>
<h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><p>NPM是随同NodeJS一起安装的包管理工具，能解决NodeJS代码部署上的很多问题，常见的使用场景有以下几种：</p>
<ul>
<li>允许用户从NPM服务器下载别人编写的第三方包到本地使用。</li>
<li>允许用户从NPM服务器下载并安装别人编写的命令行程序到本地使用。</li>
<li>允许用户将自己编写的包或命令行程序上传到NPM服务器供别人使用。</li>
</ul>
<p>由于新版的Node.js已经集成了npm，所以之前npm也一并安装好了。Windows我比较喜欢用PowerShell，包含了一些Linux的命令，也可以用vim。<br>然后使用npm安装hexo：</p>
<pre><code>npm install -g hexo
</code></pre><p>安装过程中我是出现了一个warning：This package is no longer maintained，暂时可以无视。</p>
<h2 id="创建hexo文件并安装依赖包"><a href="#创建hexo文件并安装依赖包" class="headerlink" title="创建hexo文件并安装依赖包"></a>创建hexo文件并安装依赖包</h2><p>安装完成后，在该文件夹内执行以下命令，将在当前目录建立网站所需要的所有文件</p>
<pre><code>hexo init
</code></pre><p>看到：</p>
<pre><code>INFO    Start blogging with Hexo!
</code></pre><p>说明建立完成，执行以下命令，安装所需依赖：</p>
<pre><code>npm install
</code></pre><h2 id="本地浏览"><a href="#本地浏览" class="headerlink" title="本地浏览"></a>本地浏览</h2><pre><code>hexo generate
hexo server
</code></pre><p>这里hexo默认用的是本地的4000端口，我第一次开启后发现访问不了，想了一下应该是已经被占用了，查询：</p>
<pre><code>netstat -aon | grep 4000
tasklist | grep 上条命令结果最后的PID
</code></pre><p><img src="/2017/03/27/hexo搭建github技术博客/hexo_1.png" alt="查询福昕"></p>
<p>是福昕，所以手动改下端口：</p>
<pre><code>hexo s -p 5000
</code></pre><p>这里的s是server的缩写，下面会给出常用的缩写，在上面的命令执行后，浏览器访问：127.0.0.1:5000，可以看到本地的博客已经搭建起来了。下面我们要做的是部署到GitHub上。</p>
<h2 id="新建网站项目目录"><a href="#新建网站项目目录" class="headerlink" title="新建网站项目目录"></a>新建网站项目目录</h2><p><img src="/2017/03/27/hexo搭建github技术博客/hexo_2.png" alt="新建目录"></p>
<p>注意格式，<code>yourname.github.io</code></p>
<h2 id="生成SSH密钥并添加"><a href="#生成SSH密钥并添加" class="headerlink" title="生成SSH密钥并添加"></a>生成SSH密钥并添加</h2><p>ssh-keygen -t rsa -C “你的邮箱地址”，按3个回车，密码为空。在C:\Users\Administrator.ssh下，得到两个文件id_rsa和id_rsa.pub。打开id_rsa.pub，复制全文。<a href="https://github.com/settings/keys" target="_blank" rel="external">Add SSH key</a>，粘贴进去。</p>
<h2 id="hexo目录结构"><a href="#hexo目录结构" class="headerlink" title="hexo目录结构"></a>hexo目录结构</h2><p>├── .deploy #需要部署的文件<br>├── node_modules #Hexo插件<br>├── public #生成的静态网页文件<br>├── scaffolds #模板<br>├── source #博客正文和其他源文件，404、favicon、CNAME 都应该放在这里<br>| ├── _drafts #草稿<br>| └── _posts #文章<br>├── themes #主题<br>├── _config.yml #全局配置文件<br>└── package.json</p>
<h2 id="全局配置-config-yml"><a href="#全局配置-config-yml" class="headerlink" title="全局配置 _config.yml"></a>全局配置 _config.yml</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div></pre></td><td class="code"><pre><div class="line"># Hexo Configuration</div><div class="line">## Docs: http://hexo.io/docs/configuration.html</div><div class="line">## Source: https://github.com/hexojs/hexo/</div><div class="line"># Site #站点信息</div><div class="line">title:  #标题</div><div class="line">subtitle:  #副标题</div><div class="line">description:  #站点描述，给搜索引擎看的</div><div class="line">author:  #作者</div><div class="line">email:  #电子邮箱</div><div class="line">language:  #语言</div><div class="line"># URL #链接格式</div><div class="line">url:  #网址</div><div class="line">root: / #根目录</div><div class="line">permalink: :year/:month/:day/:title/ #文章的链接格式</div><div class="line">tag_dir: tags #标签目录</div><div class="line">archive_dir: archives #存档目录</div><div class="line">category_dir: categories #分类目录</div><div class="line">code_dir: downloads/code</div><div class="line">permalink_defaults:</div><div class="line"># Directory #目录</div><div class="line">source_dir: source #源文件目录</div><div class="line">public_dir: public #生成的网页文件目录</div><div class="line"># Writing #写作</div><div class="line">new_post_name: :title.md #新文章标题</div><div class="line">default_layout: post #默认的模板，包括 post、page、photo、draft（文章、页面、照片、草稿）</div><div class="line">titlecase: false #标题转换成大写</div><div class="line">external_link: true #在新选项卡中打开连接</div><div class="line">filename_case: 0</div><div class="line">render_drafts: false</div><div class="line">post_asset_folder: false</div><div class="line">relative_link: false</div><div class="line">highlight: #语法高亮</div><div class="line">  enable: true #是否启用</div><div class="line">  line_number: true #显示行号</div><div class="line">  tab_replace:</div><div class="line"># Category &amp; Tag #分类和标签</div><div class="line">default_category: uncategorized #默认分类</div><div class="line">category_map:</div><div class="line">tag_map:</div><div class="line"># Archives</div><div class="line">2: 开启分页</div><div class="line">1: 禁用分页</div><div class="line">0: 全部禁用</div><div class="line">archive: 2</div><div class="line">category: 2</div><div class="line">tag: 2</div><div class="line"># Server #本地服务器</div><div class="line">port: 4000 #端口号</div><div class="line">server_ip: localhost #IP 地址</div><div class="line">logger: false</div><div class="line">logger_format: dev</div><div class="line"># Date / Time format #日期时间格式</div><div class="line">date_format: YYYY-MM-DD #参考http://momentjs.com/docs/#/displaying/format/</div><div class="line">time_format: H:mm:ss</div><div class="line"># Pagination #分页</div><div class="line">per_page: 10 #每页文章数，设置成 0 禁用分页</div><div class="line">pagination_dir: page</div><div class="line"># Disqus #Disqus评论，替换为多说</div><div class="line">disqus_shortname:</div><div class="line"># Extensions #拓展插件</div><div class="line">theme: #主题</div><div class="line">exclude_generator:</div><div class="line">plugins: #插件，例如生成 RSS 和站点地图的</div><div class="line">- hexo-generator-feed</div><div class="line">- hexo-generator-sitemap</div><div class="line"># Deployment #部署，将 lmintlcx 改成用户名</div><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repo: 刚刚github创库地址.git</div><div class="line">  branch: master</div></pre></td></tr></table></figure>
<p>注意：</p>
<ul>
<li>冒号:后面都有一个空格</li>
<li>repo: 刚刚github创库地址.git</li>
</ul>
<h2 id="hexo常用命令："><a href="#hexo常用命令：" class="headerlink" title="hexo常用命令："></a>hexo常用命令：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">hexo help #查看帮助</div><div class="line">hexo init #初始化一个目录</div><div class="line">hexo new &quot;postName&quot; #新建文章</div><div class="line">hexo new page &quot;pageName&quot; #新建页面</div><div class="line">hexo generate #生成网页，可以在 public 目录查看整个网站的文件</div><div class="line">hexo server #本地预览，&apos;Ctrl+C&apos;关闭</div><div class="line">hexo deploy #部署.deploy目录</div><div class="line">hexo clean #清除缓存，**强烈建议每次执行命令前先清理缓存，每次部署前先删除 .deploy 文件夹**</div></pre></td></tr></table></figure>
<h2 id="简写："><a href="#简写：" class="headerlink" title="简写："></a>简写：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">hexo n == hexo new</div><div class="line">hexo g == hexo generate</div><div class="line">hexo s == hexo server</div><div class="line">hexo d == hexo deploy</div></pre></td></tr></table></figure>
<h2 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h2><pre><code>hexo new &quot;标题&quot;
</code></pre><p>在 _posts 目录下会生成文件标题.md</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title: Hello World</div><div class="line">date: 2015-07-30 07:56:29 #发表日期，一般不改动</div><div class="line">categories: hexo #文章文类</div><div class="line">tags: [hexo,github] #文章标签，多于一项时用这种格式</div><div class="line">---</div></pre></td></tr></table></figure>
<p>正文，使用Markdown语法书写，编辑完后保存，hexo server 预览</p>
<h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><p>执行下列指令即可完成部署。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hexo generate</div><div class="line">hexo deploy</div></pre></td></tr></table></figure>
<p>这里我deploy时，没有成功，出现了一个错误</p>
<pre><code>ERROR Deployer not found: git
</code></pre><p>原来是需要装这个：</p>
<pre><code>npm install hexo-deployer-git --save
</code></pre><p>再执行，出现以下提示，说明部署完成：</p>
<pre><code>[info] Deploy done: git
</code></pre><p>点击 Github 上项目的 Settings，GitHub Pages，提示Your site is published at <a href="https://rexking6.github.io/" target="_blank" rel="external">https://rexking6.github.io/</a> (这是我自己的)</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>在搭建博客的过程中，发现hexo真是简单好用啊，对于我这种没学过前端的，真是神器啊。也体会到了github能部署网站的厉害之处，之后想把两个网站来作个部署记录，还有绑定阿里域名和图床，也都会写出来。</p>
]]></content:encoded>
      
      <comments>http://yoursite.com/2017/03/27/hexo%E6%90%AD%E5%BB%BAgithub%E6%8A%80%E6%9C%AF%E5%8D%9A%E5%AE%A2/#disqus_thread</comments>
    </item>
    
    <item>
      <title>重回博客</title>
      <link>http://yoursite.com/2017/03/15/%E9%87%8D%E5%9B%9E%E5%8D%9A%E5%AE%A2/</link>
      <guid>http://yoursite.com/2017/03/15/%E9%87%8D%E5%9B%9E%E5%8D%9A%E5%AE%A2/</guid>
      <pubDate>Tue, 14 Mar 2017 23:47:25 GMT</pubDate>
      <description>
      
        &lt;p&gt;之前是有写过技术博客的，但是写了几次之后，感觉自己写的东西很渣，不能看。&lt;/p&gt;
&lt;p&gt;前段时间开始找实习，要总结复习自己两年多学的东西并开始复习，但是自己本地作记录的几个知识面的位置有些找不到了，加上阿里一面很糟糕，所以打算回来写博客，及时记录，及时反省，及时补救。&lt;/p
      
      </description>
      
      <content:encoded><![CDATA[<p>之前是有写过技术博客的，但是写了几次之后，感觉自己写的东西很渣，不能看。</p>
<p>前段时间开始找实习，要总结复习自己两年多学的东西并开始复习，但是自己本地作记录的几个知识面的位置有些找不到了，加上阿里一面很糟糕，所以打算回来写博客，及时记录，及时反省，及时补救。</p>
<p>很多时候遇到问题去找答案后，就跟着照做了几个步骤，回头就忘了，这时候写博客记录下来是比较好的，因为作为博客写了出来，就会抱着一种不能误人子弟的想法，而且对知识的扩展也会去了解学习。</p>
<p>然后CSDN的博客感觉不够简洁，就自己用hexo搭了个github博客出来。</p>
]]></content:encoded>
      
      <comments>http://yoursite.com/2017/03/15/%E9%87%8D%E5%9B%9E%E5%8D%9A%E5%AE%A2/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
