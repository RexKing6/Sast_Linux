<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>RexKing6&#39;s Note</title>
    <link>http://yoursite.com/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>活成我心中的样子</description>
    <pubDate>Tue, 04 Apr 2017 00:35:40 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>搭建Shadowsocks并使用</title>
      <link>http://yoursite.com/2017/04/03/%E6%90%AD%E5%BB%BAShadowsocks%E5%B9%B6%E4%BD%BF%E7%94%A8/</link>
      <guid>http://yoursite.com/2017/04/03/%E6%90%AD%E5%BB%BAShadowsocks%E5%B9%B6%E4%BD%BF%E7%94%A8/</guid>
      <pubDate>Mon, 03 Apr 2017 02:04:53 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;之前科学上网用的是VPN，&lt;a href=&quot;https://www.greenjsq.me/&quot; target=&quot;_blank&quot; rel=&quot;e
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>之前科学上网用的是VPN，<a href="https://www.greenjsq.me/" target="_blank" rel="external">green</a>的VPN很稳定，速度也快，一个月18元也不算贵，这次搭建Shadowsocks是自己感兴趣，所以尝试搭建了下，写了下来。</p>
<h2 id="买个VPS"><a href="#买个VPS" class="headerlink" title="买个VPS"></a>买个VPS</h2><p>关于国外VPS买哪一家好，可以看<a href="http://www.laozuo.org/myvps" target="_blank" rel="external">老左博客</a>，介绍很全面详细，我自己选的是<a href="https://www.vultr.com/" target="_blank" rel="external">Vultr</a>，老左里面说的活动好像都过期了。</p>
<p>注册Vultr账号和<a href="https://www.paypal.com/c2/webapps/mpp/account-selection" target="_blank" rel="external">Paypal</a>账号。<br>PS: 用于付款，不想注册Paypal的话，可以试试搬瓦工，可以用支付宝，具体见老左博客。</p>
<p>新建实例：</p>
<p><img src="/2017/04/03/搭建Shadowsocks并使用/ss_0.png" alt="Location"></p>
<p>服务器位置，一般看你自己经常访问的网址主要在哪里。</p>
<p><img src="/2017/04/03/搭建Shadowsocks并使用/ss_1.png" alt="Type"></p>
<p>服务器系统一般选CentOS，配置我是选的最低（毕竟穷）。</p>
<p>这样创建之后一个月2.5刀，有500G流量，够用也不算贵。用Paypal付款成功之后，就可以看到你的VPS。</p>
<p><img src="/2017/04/03/搭建Shadowsocks并使用/ss_2.png" alt="VPS"></p>
<h2 id="安装Shadowsocks"><a href="#安装Shadowsocks" class="headerlink" title="安装Shadowsocks"></a>安装Shadowsocks</h2><p>使用<a href="http://www.netsarang.com/products/xsh_overview.html" target="_blank" rel="external">Xshell5</a>或者<a href="http://www.chiark.greenend.org.uk/~sgtatham/putty/" target="_blank" rel="external">PuTTY</a>连接刚买的VPS，接收密钥，输入用户名<code>root</code>，密码直接复制上面的Password，连接成功。</p>
<p><img src="/2017/04/03/搭建Shadowsocks并使用/ss_3.png" alt="连接VPS"></p>
<p>之后输入以下命令：</p>
<pre><code>wget no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks.sh
chmod +x shadowsocks.sh
./shadowsocks.sh 2&gt;&amp;1 | tee shadowsocks.log
</code></pre><p>输入完回车可以看到以下这个界面：</p>
<p><img src="/2017/04/03/搭建Shadowsocks并使用/ss_4.png" alt="ss设置"></p>
<p>设置密码、端口，敲任意键开始安装设置，完成之后将出现以下信息：</p>
<p><img src="/2017/04/03/搭建Shadowsocks并使用/ss_5.png" alt="ss信息"></p>
<p>到这里，Shadowsocks已经搭建好了，如果想卸载则执行：</p>
<pre><code>./shadowsocks.sh uninstall
</code></pre><h2 id="安装Kcptun给Shadowsocks加速"><a href="#安装Kcptun给Shadowsocks加速" class="headerlink" title="安装Kcptun给Shadowsocks加速"></a>安装Kcptun给Shadowsocks加速</h2><p>Kcptun，一个免费的加速工具。它是一个非常简单和快速的，基于 KCP 协议的 UDP 隧道，它可以将 TCP 流转换为 KCP+UDP 流。而 KCP 是一个快速可靠协议，能以比 TCP 浪费10%-20%的带宽的代价，换取平均延迟降低 30%-40%，且最大延迟降低三倍的传输效果。</p>
<p>安装执行以下命令：</p>
<pre><code>wget https://raw.githubusercontent.com/kuoruan/kcptun_installer/master/kcptun.sh
chmod +x ./kcptun.sh
./kcptun.sh
</code></pre><p>执行完成，将看到以下界面：</p>
<p><img src="/2017/04/03/搭建Shadowsocks并使用/ss_6.png" alt="Kcptun设置"></p>
<h3 id="设置Kcptun服务端端口"><a href="#设置Kcptun服务端端口" class="headerlink" title="设置Kcptun服务端端口"></a>设置Kcptun服务端端口</h3><p>请输入一个未被占用的端口，Kcptun 运行时将使用此端口。</p>
<h3 id="设置加速的-IP"><a href="#设置加速的-IP" class="headerlink" title="设置加速的 IP"></a>设置加速的 IP</h3><p>如果你想加速 Shadowsocks，而 Shadowsocks 就在运行在当前服务器上，直接回车即可。如果 Shadowsocks 运行在其他服务器，请输入服务器的 IP 地址。这也就是说，Kcptun 不仅能加速本地的端口，也能加速远端的端口。</p>
<h3 id="设置加速的端口"><a href="#设置加速的端口" class="headerlink" title="设置加速的端口"></a>设置加速的端口</h3><p>输入上面Shadowsocks设置的服务端口。</p>
<h3 id="设置密码"><a href="#设置密码" class="headerlink" title="设置密码"></a>设置密码</h3><p>不输入的话，有个默认密码<code>it&#39;s a secrect</code>。</p>
<p>设置完成，安装成功之后，可以看到以下输出信息：</p>
<p><img src="/2017/04/03/搭建Shadowsocks并使用/ss_7.png" alt="Kcptun信息"></p>
<p>这些信息记得保存下来，待会客户端配置的时候需要用到。</p>
<p>Kcptun有关命令：</p>
<pre><code>./kcptun.sh update    #更新
./kcptun.sh reconfig    #重新配置
./kcptun.sh uninstall    #卸载
</code></pre><p>到这里，服务器上的配置就已经完成了，接下来是客户端的配置。</p>
<h2 id="Shadowsocks-Android"><a href="#Shadowsocks-Android" class="headerlink" title="Shadowsocks-Android"></a>Shadowsocks-Android</h2><p>下载<a href="https://github.com/shadowsocks/shadowsocks-android/releases" target="_blank" rel="external">apk客户端</a></p>
<p>安装，打开影梭，界面：</p>
<p><img src="/2017/04/03/搭建Shadowsocks并使用/ss_8.png" alt="影梭安卓界面"></p>
<p>新建并设置：</p>
<p><img src="/2017/04/03/搭建Shadowsocks并使用/ss_9.png" alt="影梭安卓设置"></p>
<p>服务器就填服务器的IP，远程端口是填Shadowsocks的服务端口，加密方法就填Shandowsocks设置的加密方法。</p>
<p>配置完成之后，测试一下能否正常联网，如果可以的话，再配置KCP协议。</p>
<p><img src="/2017/04/03/搭建Shadowsocks并使用/ss_10.png" alt="连接成功"></p>
<p>在新版的Shadowsocks安卓客户端，Kcptun是作为插件来安装的，所以我们得下个<a href="https://github.com/shadowsocks/kcptun-android/releases" target="_blank" rel="external">Kcptun插件</a>，下载完安装，可以看到配置文件中最下面的插件有了Kcptun：</p>
<p><img src="/2017/04/03/搭建Shadowsocks并使用/ss_11.png" alt="Kcptun插件"></p>
<p>接下来是参数的设置，可以看到服务器Kcptun的配置信息：</p>
<p><img src="/2017/04/03/搭建Shadowsocks并使用/ss_12.png" alt="Kcptun服务端信息"></p>
<p>然后是手机端的配置：</p>
<p><img src="/2017/04/03/搭建Shadowsocks并使用/ss_13.png" alt="Kcp手机端配置"></p>
<p>这里的参数是用<code>key=value</code>的格式来配置的。另外，如果这个参数是boolean类型，写了参数就表示<code>true</code>，没写则表示<code>false</code>。可以看到右下角有个问号，点开可以看到一些默认参数，对于那些默认值相同的就可以不写了，对照我的服务端配置：</p>
<pre><code>sndwnd=512;remoteaddr=45.32.137.118:29900;key=123456;mode=fast2
</code></pre><p>设置成功后，保存重新连接，可以发现，速度快了很多，不过，相对地，流量也会多走……</p>
<h2 id="Shadowsocks-Windows"><a href="#Shadowsocks-Windows" class="headerlink" title="Shadowsocks-Windows"></a>Shadowsocks-Windows</h2><p>Windows下，我们总共需要下载三个东西，<a href="https://github.com/xtaci/kcptun/releases" target="_blank" rel="external">Kcptun客户端</a>、<a href="https://github.com/dfdragon/kcptun_gclient/releases" target="_blank" rel="external">Kcptun管理工具</a>、<a href="https://github.com/shadowsocks/shadowsocks-windows/releases" target="_blank" rel="external">Shadowsocks客户端</a>。这里要注意，Kcptun客户端的版本要跟Kcptun服务端的版本一样，Kcptun服务端的版本如下：</p>
<p><img src="/2017/04/03/搭建Shadowsocks并使用/ss_12.png" alt="Kcptun版本"></p>
<h3 id="Kcptun配置"><a href="#Kcptun配置" class="headerlink" title="Kcptun配置"></a>Kcptun配置</h3><p>接下来是配置Kcptun管理工具，我之前配置的时候，逻辑一直错误了，今天了解了Kcptun原理，才知道在客户端设置得反过来，Kcptun原理图如下：</p>
<p><img src="/2017/04/03/搭建Shadowsocks并使用/ss_15.png" alt="Kcptun原理"></p>
<p>可以看到，本地向服务器发送请求后，服务器会向本地发送数据，数据本来通过服务端的Shadowsocks端口发送到本地的Shadowsocks端口，有了Kcptun之后，服务端的数据通过Shadowsocks端口再通过Kcptun端口发送到本地的Kcptun端口，然后再发送到本地的Shadowsocks端口。知道这个原理之后，我们清楚本地要先配置的是Kcptun，打开Kcptun管理工具：</p>
<p><img src="/2017/04/03/搭建Shadowsocks并使用/ss_16.png" alt="Kcptun管理工具"></p>
<p>把Kcptun客户端按住放进来，右上角的路径已经填好了。本地端口自己填一个就好了，Kcp服务器地址填VPS的服务器IP，端口填Kcptun服务器上的端口，我上面是29900。其他的配置信息按照服务端的配置。</p>
<h3 id="Shadowsocks配置"><a href="#Shadowsocks配置" class="headerlink" title="Shadowsocks配置"></a>Shadowsocks配置</h3><p><img src="/2017/04/03/搭建Shadowsocks并使用/ss_17.png" alt="Shadowsocks客户端配置"><br>这里的服务器地址写本地<code>127.0.0.1</code>，端口写刚才Kcptun自设的端口<code>10800</code>，密码是Shadowsocks服务端的密码，右下角再填个本地的端口。这个本地的端口，待会要用，数据就是从这个端口出来的。</p>
<h3 id="Chrome装Proxy-SwitchyOmega插件"><a href="#Chrome装Proxy-SwitchyOmega插件" class="headerlink" title="Chrome装Proxy SwitchyOmega插件"></a>Chrome装Proxy SwitchyOmega插件</h3><p><img src="/2017/04/03/搭建Shadowsocks并使用/ss_18.png" alt="Proxy SwitchyOmega"></p>
<p>Chrome浏览器安装Proxy SwitchyOmega，之后打开选项：</p>
<p><img src="/2017/04/03/搭建Shadowsocks并使用/ss_19.png" alt="Proxy SwitchyOmega"></p>
<p>选个情景模式，把代理协议选为<code>SOCKS5</code>，服务器填本地<code>127.0.0.1</code>，端口就是要填刚才Shadowsocks自设的端口，我的就是10801，填完之后保存，在浏览器选中该情景模式，就可以科学上网了！</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>哎呀，这次搭建Shadowsocks真是几经波折，网上很多教程都写不全，拼起来看也有很多错误。不过，Kcptun加速的效果实在太显著了，youtube看1080P完全不卡的。</p>
]]></content:encoded>
      
      <comments>http://yoursite.com/2017/04/03/%E6%90%AD%E5%BB%BAShadowsocks%E5%B9%B6%E4%BD%BF%E7%94%A8/#disqus_thread</comments>
    </item>
    
    <item>
      <title>hexo主题和添加评论、打赏、搜索、阅读量等功能</title>
      <link>http://yoursite.com/2017/03/30/hexo%E4%B8%BB%E9%A2%98%E5%92%8C%E6%B7%BB%E5%8A%A0%E8%AF%84%E8%AE%BA%E3%80%81%E6%89%93%E8%B5%8F%E3%80%81%E6%90%9C%E7%B4%A2%E3%80%81%E9%98%85%E8%AF%BB%E9%87%8F%E7%AD%89%E5%8A%9F%E8%83%BD/</link>
      <guid>http://yoursite.com/2017/03/30/hexo%E4%B8%BB%E9%A2%98%E5%92%8C%E6%B7%BB%E5%8A%A0%E8%AF%84%E8%AE%BA%E3%80%81%E6%89%93%E8%B5%8F%E3%80%81%E6%90%9C%E7%B4%A2%E3%80%81%E9%98%85%E8%AF%BB%E9%87%8F%E7%AD%89%E5%8A%9F%E8%83%BD/</guid>
      <pubDate>Thu, 30 Mar 2017 15:09:34 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;以下绝大部分转载于&lt;a href=&quot;http://www.jianshu.com/p/5973c05d7100&quot; target=&quot;_blan
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>以下绝大部分转载于<a href="http://www.jianshu.com/p/5973c05d7100" target="_blank" rel="external">【干货】2个小时教你hexo博客添加评论、打赏、RSS等功能</a>，原文真是满满的干货，看完学习了许多许多，受益匪浅，在这里感谢下作者，写得太好了，以下是原文加上我自己操作中的一些东西。</p>
<h2 id="更换Hexo主题"><a href="#更换Hexo主题" class="headerlink" title="更换Hexo主题"></a>更换Hexo主题</h2><p>安装Hexo默认主题是<code>landscape</code>，长这样：</p>
<p><img src="/2017/03/30/hexo主题和添加评论、打赏、搜索、阅读量等功能/hexo_0.png" alt="landscape"></p>
<p>更换后的主题为NexT，其Github网址为：<a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="external">https://github.com/iissnan/hexo-theme-next</a> 。首先将NexT的主题源文件下载到本地，使用Git克隆指令如下：</p>
<pre><code>git clone https://github.com/iissnan/hexo-theme-next themes/next
</code></pre><p>下载后，复制其中名称为next的文件夹到Hexo的主题目录下，主题目录的路径为：</p>
<pre><code>Hexo根目录/themes/
</code></pre><p>在Hexo根目录下有一个以<code>_config.yml</code>命名的文件（下称<strong>站点配置文件</strong>），用Vim等文本编辑器打开，在其中找到<code>theme</code>属性，将其由<code>landscape</code>改为<code>next</code>。</p>
<p><img src="/2017/03/30/hexo主题和添加评论、打赏、搜索、阅读量等功能/hexo_1.png" alt="配置修改主题"><br>然后在Hexo根目录执行<strong>部署Hexo</strong>指令：</p>
<pre><code>hexo clean
hexo g
hexo d
</code></pre><p>然后就可以看到修改后的主题：</p>
<p><img src="/2017/03/30/hexo主题和添加评论、打赏、搜索、阅读量等功能/hexo_2.png" alt="NexT"></p>
<h2 id="设置NexT的主题模式"><a href="#设置NexT的主题模式" class="headerlink" title="设置NexT的主题模式"></a>设置NexT的主题模式</h2><p>Hexo主题中，有三种不同的模式，通过切换模式，让NexT主题显示不一样的样式。在NexT根目录下有一个同样名称为<code>_config.yml</code>，为了区分hexo根目录下的<code>_config.yml</code>，将前者称为主题配置文件，在其中找到<code>scheme</code>属性，如下图所示：</p>
<p><img src="/2017/03/30/hexo主题和添加评论、打赏、搜索、阅读量等功能/hexo_3.png" alt="scheme"></p>
<p>默认的是<code>Muse</code>模式，我设置的是<code>Mist</code>，在NexT的GitHub主页上展示的是这种模式，很简洁。读者可根据自己的喜好，选择其中一种模式。</p>
<h2 id="设置预览摘要"><a href="#设置预览摘要" class="headerlink" title="设置预览摘要"></a>设置预览摘要</h2><p>设置完模式后，读者们会发现，尽管首页显示的是所有文章的列表，但是每一篇文章都显示了所有内容，这样感觉看起来不舒服，这时候可以启用预览摘要模式，在主题配置文件中找到<code>auto_excerpt</code>属性，将<code>enable</code>设置为<code>true</code> ，将<code>length</code>设置为想要预览到的字数，默认是150，如下图所示：</p>
<p><img src="/2017/03/30/hexo主题和添加评论、打赏、搜索、阅读量等功能/hexo_4.png" alt="auto_excerpt"></p>
<p>设置方面的修改完成之后，最好都重新clean-&gt;generate-&gt;deploy一下。</p>
<h2 id="添加评论功能"><a href="#添加评论功能" class="headerlink" title="添加评论功能"></a>添加评论功能</h2><p>NexT目前出到5.1.0版本，功能模块已经相当的丰富。NexT主题集成了评论系统，只需要设置相关的属性即可实现功能，其目前支持多说、Disqus、Facebook评论、Hyper评论、网页云跟帖等。这里我们使用的是另一款名为友言的评论系统，它也是NexT已经集成好的，可以直接拿来用的。打开<a href="http://www.uyan.cc" target="_blank" rel="external">友言官网</a>，注册账号，进入“后台管理”，可以看到自己的用户ID。</p>
<p><img src="/2017/03/30/hexo主题和添加评论、打赏、搜索、阅读量等功能/hexo_5.png" alt="用户ID"></p>
<p>打开<code>hexo根目录/themes/next/_config.yml</code>，我们称这个为“主题配置文件”，找到下面这项：</p>
<p><img src="/2017/03/30/hexo主题和添加评论、打赏、搜索、阅读量等功能/hexo_6.png" alt="用户ID"></p>
<p>将刚才的用户ID填进去。在这里不得不感叹下NexT的精妙，可供使用者修改的地方非常多，修改添加的时候又特别方便，添加的时候只要去掉注释就好了。</p>
<p>效果如下：</p>
<p><img src="/2017/03/30/hexo主题和添加评论、打赏、搜索、阅读量等功能/hexo_7.png" alt="评论"></p>
<h2 id="添加打赏功能"><a href="#添加打赏功能" class="headerlink" title="添加打赏功能"></a>添加打赏功能</h2><p>打赏是读者对笔者支持的最大动力，作为写博客的我来说，打赏功能如果在自己的博客中出现，那真的是求之不得呀（虽然基本不会有人来打赏）！而NexT正好集成了打赏的功能，其实现的思路是放上收款二维码，让读者扫码后支付。原作者添加了微信支付和支付宝支付，所以以此为例：</p>
<h3 id="获取微信收款二维码"><a href="#获取微信收款二维码" class="headerlink" title="获取微信收款二维码"></a>获取微信收款二维码</h3><p>微信二维码的获取途径还是比较容易的，按照<a href="http://jingyan.baidu.com/article/b907e627b641b646e6891c6b.html" target="_blank" rel="external">这个教程</a>即可实现，读者们也可以预先设置收款的金额。</p>
<h3 id="获取支付宝收款二维码"><a href="#获取支付宝收款二维码" class="headerlink" title="获取支付宝收款二维码"></a>获取支付宝收款二维码</h3><p>在支付宝首页的“收款”，截图即可得到二维码。</p>
<h3 id="添加二维码图片资源"><a href="#添加二维码图片资源" class="headerlink" title="添加二维码图片资源"></a>添加二维码图片资源</h3><p>得到二维码图片资源后，读者们可将二维码图片放到<code>NexT根目录/source/images/</code>文件夹下。</p>
<h3 id="开启打赏功能"><a href="#开启打赏功能" class="headerlink" title="开启打赏功能"></a>开启打赏功能</h3><p>找到主题配置文件，在其最后添加打赏的配置信息：</p>
<p><img src="/2017/03/30/hexo主题和添加评论、打赏、搜索、阅读量等功能/hexo_8.png" alt="reward_comment"></p>
<p>部署后，效果如下：</p>
<p><img src="/2017/03/30/hexo主题和添加评论、打赏、搜索、阅读量等功能/hexo_9.png" alt="打赏"></p>
<h2 id="设置侧边栏显示效果"><a href="#设置侧边栏显示效果" class="headerlink" title="设置侧边栏显示效果"></a>设置侧边栏显示效果</h2><p>在主题配置文件中，找到<code>sidebar</code>的<code>display</code>属性，<code>display</code>属性有四种显示模式：分别为：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">post    // 默认显示方式</div><div class="line">always  // 一直显示</div><div class="line">hide    // 初始隐藏</div><div class="line">remove  // 移除侧边栏</div></pre></td></tr></table></figure>
<p>我设置为hide模式，如下图所示：</p>
<p><img src="/2017/03/30/hexo主题和添加评论、打赏、搜索、阅读量等功能/hexo_10.png" alt="sidebar"></p>
<h2 id="添加菜单选项"><a href="#添加菜单选项" class="headerlink" title="添加菜单选项"></a>添加菜单选项</h2><p>默认情况下，菜单导航栏有首页、归档、关于三个选项，除此之外笔者还添加了分类、标签和关于。在主题配置文件中，找到<code>menu</code>属性，并去掉<code>categories</code>、<code>tags</code>、<code>about</code>的注释，如下图所示：</p>
<p><img src="/2017/03/30/hexo主题和添加评论、打赏、搜索、阅读量等功能/hexo_11.png" alt="menu"></p>
<p>然后在Hexo根目录执行指令如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">// 添加分类页面</div><div class="line">hexo new page &quot;categories&quot;</div><div class="line">// 添加标签页面</div><div class="line">hexo new page “tags”</div><div class="line">// 添加关于页面</div><div class="line">hexo new page &quot;about&quot;</div></pre></td></tr></table></figure>
<p>执行完上述指令后，在<code>Hexo根目录/source/</code>文件夹下创建三个文件夹，命名分别为：<code>categories</code>、<code>tags</code>、<code>about</code>文件夹，在这些文件夹中分别会创建一个以<code>index</code>命名的Markdown文件，对这三个Markdown文件内容进行修改，使之分别为：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title: categories</div><div class="line">date: 2017-03-12 22:06:24</div><div class="line">type: &quot;categories&quot;</div><div class="line">---</div><div class="line">---</div><div class="line">title: 标签</div><div class="line">date: 2017-03-12 17:27:16</div><div class="line">type: &quot;tags&quot;</div><div class="line">---</div><div class="line">---</div><div class="line">title: about</div><div class="line">date: 2017-03-12 22:07:26</div><div class="line">type: &quot;about&quot;</div><div class="line">---</div></pre></td></tr></table></figure>
<p>完成文件的修改，然后部署Hexo即可完成菜单选项的添加。</p>
<h2 id="添加搜索功能"><a href="#添加搜索功能" class="headerlink" title="添加搜索功能"></a>添加搜索功能</h2><p>完成了上述菜单选项的添加后，读者们可以看到菜单栏中还有搜索一项，搜索的功能源于第三方服务——Algolia，接下来看看配置的步骤：</p>
<h3 id="注册Algolia，创建Index"><a href="#注册Algolia，创建Index" class="headerlink" title="注册Algolia，创建Index"></a>注册Algolia，创建Index</h3><p>在Algolia官网注册一个账户，完成账户注册后，创建一个Index，如下图：</p>
<p><img src="/2017/03/30/hexo主题和添加评论、打赏、搜索、阅读量等功能/hexo_12.png" alt="创建Index"></p>
<h3 id="安装Hexo-Algolia"><a href="#安装Hexo-Algolia" class="headerlink" title="安装Hexo Algolia"></a>安装Hexo Algolia</h3><p>在Hexo根目录执行如下指令，进行Hexo Algolia的安装：</p>
<pre><code>npm install --save hexo-algolia
</code></pre><p>执行完指令后，读者们可能会发现安装失败，或发现安装成功后实现的搜索功能可以搜索但是不可以点击搜索到的文章，这是因为5.1.0版本NexT在<code>package.json</code>文件的配置中存在错误。</p>
<p>到Hexo的根目录，在其中找到<code>package.json</code>文件，修改其中的<code>hexo-algolia</code>属性值为<code>^0.2.0</code>，本来为<code>^0.1.1</code>，如下图所示：</p>
<p><img src="/2017/03/30/hexo主题和添加评论、打赏、搜索、阅读量等功能/hexo_13.png" alt="修改package.json文件"></p>
<pre><code>&quot;hexo-algolia&quot;: &quot;^0.2.0&quot;
</code></pre><p>然后再执行上述的安装指令。</p>
<h3 id="获取Key，修改站点配置"><a href="#获取Key，修改站点配置" class="headerlink" title="获取Key，修改站点配置"></a>获取Key，修改站点配置</h3><p>完成Hexo Algolia后，回到Algolia官网的Dashboard，在左侧导航栏选择API Keys一项，跳转到如下图所示的页面：</p>
<p><img src="/2017/03/30/hexo主题和添加评论、打赏、搜索、阅读量等功能/hexo_14.png" alt="获取Key"></p>
<p>基于这个页面的Key，编辑站点配置文件，在文件内容最后添加如下图所示的信息，包括  <code>ApplicationID</code>、<code>Search-Only API Key</code>、<code>Admin API Key</code>和<code>indexName</code>，其中<code>apiKey</code>就是<code>Search-Only API Key</code>：</p>
<p><img src="/2017/03/30/hexo主题和添加评论、打赏、搜索、阅读量等功能/hexo_15.png" alt="Algolia配置信息"></p>
<h3 id="更新Index"><a href="#更新Index" class="headerlink" title="更新Index"></a>更新Index</h3><p>配置好Key后，在Hexo根目录执行<code>hexo algolia</code>来更新Index，若出现如下图所示，则表示更新成功：</p>
<p><img src="/2017/03/30/hexo主题和添加评论、打赏、搜索、阅读量等功能/hexo_16.png" alt="更新Index"></p>
<p><img src="/2017/03/30/hexo主题和添加评论、打赏、搜索、阅读量等功能/hexo_17.png" alt="更新Index"></p>
<p>若更新失败，则返回上面安装Hexo Algolia的步骤，查看一下hexo-algolia是否安装成功，并核实一下package.json信息是否正确。</p>
<h3 id="启用配置搜索功能"><a href="#启用配置搜索功能" class="headerlink" title="启用配置搜索功能"></a>启用配置搜索功能</h3><p>修改主题配置文件，在其中找到<code>algolia_search</code>属性，将其<code>enable</code>子属性改为<code>true</code>，然后再看其<code>labels</code>子属性，修改相应的提示文本，使之更加适合自己的风格，属性配置如下图所示：</p>
<p><img src="/2017/03/30/hexo主题和添加评论、打赏、搜索、阅读量等功能/hexo_18.png" alt="algolia_search"></p>
<p>经过上述的操作后，部署Hexo，便可在博客中添加搜索功能，其效果图如下：</p>
<p><img src="/2017/03/30/hexo主题和添加评论、打赏、搜索、阅读量等功能/hexo_19.png" alt="找到搜索结果"></p>
<p><img src="/2017/03/30/hexo主题和添加评论、打赏、搜索、阅读量等功能/hexo_20.png" alt="未找到搜索结果"></p>
<h2 id="添加阅读次数统计"><a href="#添加阅读次数统计" class="headerlink" title="添加阅读次数统计"></a>添加阅读次数统计</h2><p>阅读次数统计是基于第三方服务——LeanCloud实现的，步骤如下：</p>
<h3 id="创建LeanCloud账号"><a href="#创建LeanCloud账号" class="headerlink" title="创建LeanCloud账号"></a>创建LeanCloud账号</h3><p>进入<img src="https://leancloud.cn" alt="LeanCloud官网">，注册。</p>
<h3 id="创建应用"><a href="#创建应用" class="headerlink" title="创建应用"></a>创建应用</h3><p>注册并登录LeanCloud后，进入控制台，单击“创建应用”按钮进行应用的创建，输入新应用名称，选择开发版，单击“创建”按钮完成创建，如下图所示：</p>
<p><img src="/2017/03/30/hexo主题和添加评论、打赏、搜索、阅读量等功能/hexo_21.png" alt="创建应用"></p>
<h3 id="创建Class"><a href="#创建Class" class="headerlink" title="创建Class"></a>创建Class</h3><p>进入到刚刚创建的应用中，选择左侧导航栏的“存储”，然后点击“创建Class”，为了与NexT形成配置关系，将Class名称填为<code>Counter</code>，并选择无限制选项，然后单击“创建Class”按钮完成Class的创建，如下图所示：</p>
<p><img src="/2017/03/30/hexo主题和添加评论、打赏、搜索、阅读量等功能/hexo_22.png" alt="创建Class"></p>
<p>点击刚刚创建的Counter，其实质是一张结构表，用来记录文章的浏览量，如下图所示，这里的表可以直接对文章阅读次数进行修改，所以如果想要追求阅读次数的读者可以在表上直接进行修改。</p>
<p><img src="/2017/03/30/hexo主题和添加评论、打赏、搜索、阅读量等功能/hexo_23.png" alt="Counter表"></p>
<h3 id="配置Key"><a href="#配置Key" class="headerlink" title="配置Key"></a>配置Key</h3><p>在左侧导航栏的设置界面，单击“应用Key”可以看到应用的App ID和App Key。</p>
<p><img src="/2017/03/30/hexo主题和添加评论、打赏、搜索、阅读量等功能/hexo_24.png" alt="Key"></p>
<p>复制ID和Key，然后将其配置到主题配置文件中，在文件中找到<code>leancloud_visitors</code>属性，将<code>enable</code>设置为<code>true</code>，然后将之前复制的ID和Key粘贴到相应的属性中。</p>
<p><img src="/2017/03/30/hexo主题和添加评论、打赏、搜索、阅读量等功能/hexo_25.png" alt="配置ID和Key"></p>
<p>至此，阅读次数统计添加完成，其效果图如下所示：</p>
<p><img src="/2017/03/30/hexo主题和添加评论、打赏、搜索、阅读量等功能/hexo_26.png" alt="添加阅读次数统计"></p>
<h2 id="添加RSS"><a href="#添加RSS" class="headerlink" title="添加RSS"></a>添加RSS</h2><h3 id="安装-hexo-generator-feed-插件"><a href="#安装-hexo-generator-feed-插件" class="headerlink" title="安装 hexo-generator-feed 插件"></a>安装 hexo-generator-feed 插件</h3><p>RSS需要有一个Feed链接，而这个链接需要靠<code>hexo-generator-feed</code>插件来生成，所以第一步需要添加插件，在Hexo根目录执行安装指令：</p>
<pre><code>npm install hexo-generator-feed --save
</code></pre><h3 id="配置feed信息"><a href="#配置feed信息" class="headerlink" title="配置feed信息"></a>配置feed信息</h3><p>在站点配置文件中追加如下图所示的信息：</p>
<p><img src="/2017/03/30/hexo主题和添加评论、打赏、搜索、阅读量等功能/hexo_27.png" alt="RSS配置"></p>
<p>feed属性下的各个子属性的含义借用feed官方英文解释如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">type - Feed type. (atom/rss2)</div><div class="line">path - Feed path. (Default: atom.xml/rss2.xml)</div><div class="line">limit - Maximum number of posts in the feed (Use 0 or false to show all posts)</div><div class="line">hub - URL of the PubSubHubbub hubs (Leave it empty if you don&apos;t use it)</div><div class="line">content - (optional) set to &apos;true&apos; to include the contents of the entire post in the feed.</div></pre></td></tr></table></figure>
<p>如此这般，RSS功能添加完成，效果图如下：</p>
<p><img src="/2017/03/30/hexo主题和添加评论、打赏、搜索、阅读量等功能/hexo_28.png" alt="RSS效果"></p>
<p>单击RSS按钮，跳转如下界面：</p>
<p><img src="/2017/03/30/hexo主题和添加评论、打赏、搜索、阅读量等功能/hexo_29.png" alt="RSS跳转结果"></p>
<h2 id="添加社交链接"><a href="#添加社交链接" class="headerlink" title="添加社交链接"></a>添加社交链接</h2><p>希望在个人博客中加入自己的邮箱和Github，接下来了解一下社交链接如何添加：</p>
<h3 id="添加链接"><a href="#添加链接" class="headerlink" title="添加链接"></a>添加链接</h3><p>在主题配置文件中找到<code>social</code>属性，在其下方添加社交链接，其格式为：</p>
<pre><code>社交平台名称：链接
</code></pre><p>笔者添加的内容如下图所示：</p>
<p><img src="/2017/03/30/hexo主题和添加评论、打赏、搜索、阅读量等功能/hexo_30.png" alt="添加社交链接"></p>
<h3 id="添加链接图标"><a href="#添加链接图标" class="headerlink" title="添加链接图标"></a>添加链接图标</h3><p>读者们可根据自己喜好，启用显示链接的图标，链接的图标全部来自于<a href="https://fortawesome.com/sets/font-awesome" target="_blank" rel="external">Font Awesome</a>，其配置方式也很简单，在主题配置文件中找到<code>social_icons</code>，修改其状态值为<code>true</code>，然后配置对应链接的图标，其格式为：</p>
<pre><code>社交平台名称: Font Awesome中的图标的名字（区分大小写）
</code></pre><p>如下图所示：</p>
<p><img src="/2017/03/30/hexo主题和添加评论、打赏、搜索、阅读量等功能/hexo_31.png" alt="添加链接图标"></p>
<h2 id="添加友情链接功能"><a href="#添加友情链接功能" class="headerlink" title="添加友情链接功能"></a>添加友情链接功能</h2><p>这次搭建自己的Hexo博客参考了很多大牛的博客，很感谢他们，我想在自己的博客上添加他们的博客链接。接下来看一下如何实现这个功能：</p>
<p>在主题配置文件中找到<code>links</code>属性，修改<code>links_title</code>属性的值为“友情链接”（也可以是其他文案），然后添加上好友的博客名称和博客地址，其格式如下：</p>
<pre><code>博客名称: 博客链接
</code></pre><p>如下是笔者的配置信息：</p>
<p><img src="/2017/03/30/hexo主题和添加评论、打赏、搜索、阅读量等功能/hexo_32.png" alt="links配置"></p>
<p>配置完成后部署Hexo，即可实现友情链接的效果，附图如下：</p>
<p><img src="/2017/03/30/hexo主题和添加评论、打赏、搜索、阅读量等功能/hexo_28.png" alt="友情链接"></p>
<h2 id="头像设置"><a href="#头像设置" class="headerlink" title="头像设置"></a>头像设置</h2><p>编辑<strong>主题配置文件</strong>，找到字段<code>avatar</code>，值设置成头像的链接地址。<br>其中，头像的链接地址可以是：</p>
<table>
<thead>
<tr>
<th>地址</th>
<th>值</th>
</tr>
</thead>
<tbody>
<tr>
<td>完整的互联网 URL</td>
<td><a href="https://balabala（就举个例子）" target="_blank" rel="external">https://balabala（就举个例子）</a></td>
</tr>
<tr>
<td>站点内的地址</td>
<td>/uploads/avatar.jpg - 需要将你的头像图片放置在 站点的 source/uploads/ （可能需要新建uploads目录）</td>
</tr>
<tr>
<td></td>
<td>/images/avatar.jpg - 需要将你的头像图片放置在 主题的 source/images/ 目录下</td>
</tr>
</tbody>
</table>
<p>头像设置示例：</p>
<p><img src="/2017/03/30/hexo主题和添加评论、打赏、搜索、阅读量等功能/hexo_33.png" alt="头像设置"></p>
<p>设置完，部署后，就可以看到头像：</p>
<p><img src="/2017/03/30/hexo主题和添加评论、打赏、搜索、阅读量等功能/hexo_28.png" alt="头像"></p>
<h2 id="编辑网站缩略图"><a href="#编辑网站缩略图" class="headerlink" title="编辑网站缩略图"></a>编辑网站缩略图</h2><p>在主题配置文件里，可以看到：</p>
<p><img src="/2017/03/30/hexo主题和添加评论、打赏、搜索、阅读量等功能/hexo_34.png" alt="缩略图配置"></p>
<p>将图标命名为<code>favicon.ico</code>，然后将ico放进Hexo/source/即可。</p>
<p><img src="/2017/03/30/hexo主题和添加评论、打赏、搜索、阅读量等功能/hexo_35.png" alt="网站缩略图"></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>在这里感谢原作者，真的很感谢，对我很有帮助，然后自己也添加了点自己的东西。</p>
]]></content:encoded>
      
      <comments>http://yoursite.com/2017/03/30/hexo%E4%B8%BB%E9%A2%98%E5%92%8C%E6%B7%BB%E5%8A%A0%E8%AF%84%E8%AE%BA%E3%80%81%E6%89%93%E8%B5%8F%E3%80%81%E6%90%9C%E7%B4%A2%E3%80%81%E9%98%85%E8%AF%BB%E9%87%8F%E7%AD%89%E5%8A%9F%E8%83%BD/#disqus_thread</comments>
    </item>
    
    <item>
      <title>hexo绑定阿里云二级域名</title>
      <link>http://yoursite.com/2017/03/28/hexo%E7%BB%91%E5%AE%9A%E9%98%BF%E9%87%8C%E4%BA%91%E4%BA%8C%E7%BA%A7%E5%9F%9F%E5%90%8D/</link>
      <guid>http://yoursite.com/2017/03/28/hexo%E7%BB%91%E5%AE%9A%E9%98%BF%E9%87%8C%E4%BA%91%E4%BA%8C%E7%BA%A7%E5%9F%9F%E5%90%8D/</guid>
      <pubDate>Tue, 28 Mar 2017 06:32:07 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;昨天总算在GitHub搭起来了自己的博客，但是在GitHub下总是有些不爽，想绑定在自己阿里云买的一个域名。&lt;/p&gt;
&lt;h2 id=&quot;阿里云
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>昨天总算在GitHub搭起来了自己的博客，但是在GitHub下总是有些不爽，想绑定在自己阿里云买的一个域名。</p>
<h2 id="阿里云解析"><a href="#阿里云解析" class="headerlink" title="阿里云解析"></a>阿里云解析</h2><p>来到阿里云控制台 -&gt; 云解析：</p>
<p><img src="/2017/03/28/hexo绑定阿里云二级域名/hexo_1.png" alt="控制台"></p>
<p>打开要绑定的域名，来到域名控制台：</p>
<p><img src="/2017/03/28/hexo绑定阿里云二级域名/hexo_2.png" alt="添加解析"></p>
<p>记录类型选择CNAME，主机记录填二级域名，比如blog.rexking6.top就填blog，记录值填之前GitHub映射的那个网址，我的是<code>rexking6.github.io</code>，点击保存。</p>
<h2 id="项目里添加CNAME"><a href="#项目里添加CNAME" class="headerlink" title="项目里添加CNAME"></a>项目里添加CNAME</h2><p>到这里还没结束，需要在GitHub的项目里添加CNAME文件，填写你的二级域名，比如我的就是blog.rexking6.top。</p>
<p><img src="/2017/03/28/hexo绑定阿里云二级域名/hexo_3.png" alt="CNAME"><br>这里不建议直接在GitHub上直接添加，因为本地同步过去的时候，又会把CNAME删除了，所以还是在本地添加后，同步。这里添加CNAME的位置是：<strong>source里，与_posts同级</strong>。</p>
<p>这样之后，就可以顺利地通过你自己的域名访问到hexo博客了。</p>
]]></content:encoded>
      
      <comments>http://yoursite.com/2017/03/28/hexo%E7%BB%91%E5%AE%9A%E9%98%BF%E9%87%8C%E4%BA%91%E4%BA%8C%E7%BA%A7%E5%9F%9F%E5%90%8D/#disqus_thread</comments>
    </item>
    
    <item>
      <title>hexo的图片以及图床</title>
      <link>http://yoursite.com/2017/03/28/hexo%E7%9A%84%E5%9B%BE%E7%89%87%E4%BB%A5%E5%8F%8A%E5%9B%BE%E5%BA%8A/</link>
      <guid>http://yoursite.com/2017/03/28/hexo%E7%9A%84%E5%9B%BE%E7%89%87%E4%BB%A5%E5%8F%8A%E5%9B%BE%E5%BA%8A/</guid>
      <pubDate>Tue, 28 Mar 2017 00:59:50 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;hexo要插入图片一般有两种方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;存储在本地的网站文件夹&lt;/li&gt;
&lt;li&gt;使用图床，插入时用外链url即可&lt;/
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>hexo要插入图片一般有两种方式：</p>
<ul>
<li>存储在本地的网站文件夹</li>
<li>使用图床，插入时用外链url即可</li>
</ul>
<h2 id="本地"><a href="#本地" class="headerlink" title="本地"></a>本地</h2><p>先说第一种，hexo本地和上传到GitHub后的目录结构不相同，所以这路径是比较难编写的。要想最后部署后能看到图片，在本地写markdown时，图片就会显示失败。有没有什么两全其美的方法呢？有。</p>
<h2 id="hexo-asset-image"><a href="#hexo-asset-image" class="headerlink" title="hexo-asset-image"></a>hexo-asset-image</h2><p>先将 _config.yml 的post_asset_folder改为true，然后运行以下命令：</p>
<pre><code>npm install https://github.com/CodeFalling/hexo-asset-image --save
</code></pre><p>安装完成后，新建文章后，将会是这种结构：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">hexo搭建github技术博客</div><div class="line">├── hexo_1.png</div><div class="line">└── hexo_2.png</div><div class="line">hexo搭建github技术博客.md</div></pre></td></tr></table></figure>
<p>这样的目录结构（目录名和文章名一致），只要使用 <code>![图片名称](hexo搭建github技术博客/hexo_1.png)</code>就可以插入图片。</p>
<p>同时，生成的 html 是</p>
<pre><code>&lt;img src=&quot;/2017/03/27/hexo搭建github技术博客/hexo_1.png&quot; alt=&quot;查询福昕&quot;&gt;
</code></pre><p>而不是之前丑陋的相对链接。</p>
<p>另外，值得一提的是，这个插件对于 CodeFalling/hexo-renderer-org 同样有效。以上的内容参考 <a href="http://www.tuicool.com/articles/umEBVfI" target="_blank" rel="external">在 hexo 中无痛使用本地图片</a> 。</p>
<h2 id="七牛云图床"><a href="#七牛云图床" class="headerlink" title="七牛云图床"></a>七牛云图床</h2><p>看网上很多人都推荐七牛云，我自己没用过别的，就直接用了。每个月有10G免费，我的博客应该没人来看，是够用的。</p>
<p>注册，新建存储空间</p>
<p><img src="/2017/03/28/hexo的图片以及图床/hexo_1.png" alt="新建存储空间"></p>
<p>然后是镜像存储，什么是镜像存储呢？</p>
<p>镜像存储是指你网站的数据在存储在自己服务器上的情况下，额外使用七牛云存储作为镜像服务器，让网站的用户每次访问的时候都从七牛云存储上读取。如果七牛云存储上没有用户需要读取的数据，则七牛的服务器会从源站拉取资源，然后再返回给网站的用户。</p>
<p>网站上的图片，CSS，JS 这些文件一般都是不太修改，使用镜像存储把这些静态文件资源镜像到七牛的服务器，网站用户访问的时候就直接从七牛的服务器上读取数据，这样可以<strong>大大降低网站服务器读取数据的压力和大大提高网站的速度</strong>，并且并不影响博客的原来使用体验，原来怎么上传图片还是继续在网站中怎么操作即可。</p>
<p><img src="/2017/03/28/hexo的图片以及图床/hexo_2.png" alt="镜像存储"></p>
<p>镜像源填自己的网站，这样设定之后，每次更新网站的内容后，就可以通过<strong>七牛云给的三级域名+相同路径</strong>访问到自己网站的相同内容（我的是<code>onh78q2s5.bkt.clouddn.com</code>）。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>关于图片的使用方法，就写到这里，对七牛云这家公司突然心生敬佩，刚好在春招，投一发实习简历去！</p>
]]></content:encoded>
      
      <comments>http://yoursite.com/2017/03/28/hexo%E7%9A%84%E5%9B%BE%E7%89%87%E4%BB%A5%E5%8F%8A%E5%9B%BE%E5%BA%8A/#disqus_thread</comments>
    </item>
    
    <item>
      <title>hexo搭建github技术博客</title>
      <link>http://yoursite.com/2017/03/27/hexo%E6%90%AD%E5%BB%BAgithub%E6%8A%80%E6%9C%AF%E5%8D%9A%E5%AE%A2/</link>
      <guid>http://yoursite.com/2017/03/27/hexo%E6%90%AD%E5%BB%BAgithub%E6%8A%80%E6%9C%AF%E5%8D%9A%E5%AE%A2/</guid>
      <pubDate>Mon, 27 Mar 2017 11:54:13 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;之前在CSDN写过几篇博客，但是一直觉得界面不够简洁，写博客的时候不太爽，想自己搭个人博客写，趁这个机会接触了hexo，记录下来。&lt;/p&gt;

      
      </description>
      
      <content:encoded><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>之前在CSDN写过几篇博客，但是一直觉得界面不够简洁，写博客的时候不太爽，想自己搭个人博客写，趁这个机会接触了hexo，记录下来。</p>
<p>PS: 以下过程是以Windows系统，大多数参考<a href="http://www.jianshu.com/p/701b1095da11" target="_blank" rel="external">手把手教你建github技术博客</a>，我按照自己的实际情况重新整理了一下。用Mac OS的同学可以参考<a href="http://www.jianshu.com/p/e99ed60390a8" target="_blank" rel="external">20分钟教你使用hexo搭建github博客</a>。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>下载 <a href="https://git-scm.com/downloads" target="_blank" rel="external">git</a> 和 <a href="https://nodejs.org/en/download" target="_blank" rel="external">Node.js</a> 并执行安装</p>
<h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><p>NPM是随同NodeJS一起安装的包管理工具，能解决NodeJS代码部署上的很多问题，常见的使用场景有以下几种：</p>
<ul>
<li>允许用户从NPM服务器下载别人编写的第三方包到本地使用。</li>
<li>允许用户从NPM服务器下载并安装别人编写的命令行程序到本地使用。</li>
<li>允许用户将自己编写的包或命令行程序上传到NPM服务器供别人使用。</li>
</ul>
<p>由于新版的Node.js已经集成了npm，所以之前npm也一并安装好了。Windows我比较喜欢用PowerShell，包含了一些Linux的命令，也可以用vim。<br>然后使用npm安装hexo：</p>
<pre><code>npm install -g hexo
</code></pre><p>安装过程中我是出现了一个warning：This package is no longer maintained，暂时可以无视。</p>
<h2 id="创建hexo文件并安装依赖包"><a href="#创建hexo文件并安装依赖包" class="headerlink" title="创建hexo文件并安装依赖包"></a>创建hexo文件并安装依赖包</h2><p>安装完成后，在该文件夹内执行以下命令，将在当前目录建立网站所需要的所有文件</p>
<pre><code>hexo init
</code></pre><p>看到：</p>
<pre><code>INFO    Start blogging with Hexo!
</code></pre><p>说明建立完成，执行以下命令，安装所需依赖：</p>
<pre><code>npm install
</code></pre><h2 id="本地浏览"><a href="#本地浏览" class="headerlink" title="本地浏览"></a>本地浏览</h2><pre><code>hexo generate
hexo server
</code></pre><p>这里hexo默认用的是本地的4000端口，我第一次开启后发现访问不了，想了一下应该是已经被占用了，查询：</p>
<pre><code>netstat -aon | grep 4000
tasklist | grep 上条命令结果最后的PID
</code></pre><p><img src="/2017/03/27/hexo搭建github技术博客/hexo_1.png" alt="查询福昕"></p>
<p>是福昕，所以手动改下端口：</p>
<pre><code>hexo s -p 5000
</code></pre><p>这里的s是server的缩写，下面会给出常用的缩写，在上面的命令执行后，浏览器访问：127.0.0.1:5000，可以看到本地的博客已经搭建起来了。下面我们要做的是部署到GitHub上。</p>
<h2 id="新建网站项目目录"><a href="#新建网站项目目录" class="headerlink" title="新建网站项目目录"></a>新建网站项目目录</h2><p><img src="/2017/03/27/hexo搭建github技术博客/hexo_2.png" alt="新建目录"></p>
<p>注意格式，<code>yourname.github.io</code></p>
<h2 id="生成SSH密钥并添加"><a href="#生成SSH密钥并添加" class="headerlink" title="生成SSH密钥并添加"></a>生成SSH密钥并添加</h2><p>ssh-keygen -t rsa -C “你的邮箱地址”，按3个回车，密码为空。在C:\Users\Administrator.ssh下，得到两个文件id_rsa和id_rsa.pub。打开id_rsa.pub，复制全文。<a href="https://github.com/settings/keys" target="_blank" rel="external">Add SSH key</a>，粘贴进去。</p>
<h2 id="hexo目录结构"><a href="#hexo目录结构" class="headerlink" title="hexo目录结构"></a>hexo目录结构</h2><p>├── .deploy #需要部署的文件<br>├── node_modules #Hexo插件<br>├── public #生成的静态网页文件<br>├── scaffolds #模板<br>├── source #博客正文和其他源文件，404、favicon、CNAME 都应该放在这里<br>| ├── _drafts #草稿<br>| └── _posts #文章<br>├── themes #主题<br>├── _config.yml #全局配置文件<br>└── package.json</p>
<h2 id="全局配置-config-yml"><a href="#全局配置-config-yml" class="headerlink" title="全局配置 _config.yml"></a>全局配置 _config.yml</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div></pre></td><td class="code"><pre><div class="line"># Hexo Configuration</div><div class="line">## Docs: http://hexo.io/docs/configuration.html</div><div class="line">## Source: https://github.com/hexojs/hexo/</div><div class="line"># Site #站点信息</div><div class="line">title:  #标题</div><div class="line">subtitle:  #副标题</div><div class="line">description:  #站点描述，给搜索引擎看的</div><div class="line">author:  #作者</div><div class="line">email:  #电子邮箱</div><div class="line">language:  #语言</div><div class="line"># URL #链接格式</div><div class="line">url:  #网址</div><div class="line">root: / #根目录</div><div class="line">permalink: :year/:month/:day/:title/ #文章的链接格式</div><div class="line">tag_dir: tags #标签目录</div><div class="line">archive_dir: archives #存档目录</div><div class="line">category_dir: categories #分类目录</div><div class="line">code_dir: downloads/code</div><div class="line">permalink_defaults:</div><div class="line"># Directory #目录</div><div class="line">source_dir: source #源文件目录</div><div class="line">public_dir: public #生成的网页文件目录</div><div class="line"># Writing #写作</div><div class="line">new_post_name: :title.md #新文章标题</div><div class="line">default_layout: post #默认的模板，包括 post、page、photo、draft（文章、页面、照片、草稿）</div><div class="line">titlecase: false #标题转换成大写</div><div class="line">external_link: true #在新选项卡中打开连接</div><div class="line">filename_case: 0</div><div class="line">render_drafts: false</div><div class="line">post_asset_folder: false</div><div class="line">relative_link: false</div><div class="line">highlight: #语法高亮</div><div class="line">  enable: true #是否启用</div><div class="line">  line_number: true #显示行号</div><div class="line">  tab_replace:</div><div class="line"># Category &amp; Tag #分类和标签</div><div class="line">default_category: uncategorized #默认分类</div><div class="line">category_map:</div><div class="line">tag_map:</div><div class="line"># Archives</div><div class="line">2: 开启分页</div><div class="line">1: 禁用分页</div><div class="line">0: 全部禁用</div><div class="line">archive: 2</div><div class="line">category: 2</div><div class="line">tag: 2</div><div class="line"># Server #本地服务器</div><div class="line">port: 4000 #端口号</div><div class="line">server_ip: localhost #IP 地址</div><div class="line">logger: false</div><div class="line">logger_format: dev</div><div class="line"># Date / Time format #日期时间格式</div><div class="line">date_format: YYYY-MM-DD #参考http://momentjs.com/docs/#/displaying/format/</div><div class="line">time_format: H:mm:ss</div><div class="line"># Pagination #分页</div><div class="line">per_page: 10 #每页文章数，设置成 0 禁用分页</div><div class="line">pagination_dir: page</div><div class="line"># Disqus #Disqus评论，替换为多说</div><div class="line">disqus_shortname:</div><div class="line"># Extensions #拓展插件</div><div class="line">theme: #主题</div><div class="line">exclude_generator:</div><div class="line">plugins: #插件，例如生成 RSS 和站点地图的</div><div class="line">- hexo-generator-feed</div><div class="line">- hexo-generator-sitemap</div><div class="line"># Deployment #部署，将 lmintlcx 改成用户名</div><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repo: 刚刚github创库地址.git</div><div class="line">  branch: master</div></pre></td></tr></table></figure>
<p>注意：</p>
<ul>
<li>冒号:后面都有一个空格</li>
<li>repo: 刚刚github创库地址.git</li>
</ul>
<h2 id="hexo常用命令："><a href="#hexo常用命令：" class="headerlink" title="hexo常用命令："></a>hexo常用命令：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">hexo help #查看帮助</div><div class="line">hexo init #初始化一个目录</div><div class="line">hexo new &quot;postName&quot; #新建文章</div><div class="line">hexo new page &quot;pageName&quot; #新建页面</div><div class="line">hexo generate #生成网页，可以在 public 目录查看整个网站的文件</div><div class="line">hexo server #本地预览，&apos;Ctrl+C&apos;关闭</div><div class="line">hexo deploy #部署.deploy目录</div><div class="line">hexo clean #清除缓存，**强烈建议每次执行命令前先清理缓存，每次部署前先删除 .deploy 文件夹**</div></pre></td></tr></table></figure>
<h2 id="简写："><a href="#简写：" class="headerlink" title="简写："></a>简写：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">hexo n == hexo new</div><div class="line">hexo g == hexo generate</div><div class="line">hexo s == hexo server</div><div class="line">hexo d == hexo deploy</div></pre></td></tr></table></figure>
<h2 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h2><pre><code>hexo new &quot;标题&quot;
</code></pre><p>在 _posts 目录下会生成文件标题.md</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title: Hello World</div><div class="line">date: 2015-07-30 07:56:29 #发表日期，一般不改动</div><div class="line">categories: hexo #文章文类</div><div class="line">tags: [hexo,github] #文章标签，多于一项时用这种格式</div><div class="line">---</div></pre></td></tr></table></figure>
<p>正文，使用Markdown语法书写，编辑完后保存，hexo server 预览</p>
<h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><p>执行下列指令即可完成部署。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hexo generate</div><div class="line">hexo deploy</div></pre></td></tr></table></figure>
<p>这里我deploy时，没有成功，出现了一个错误</p>
<pre><code>ERROR Deployer not found: git
</code></pre><p>原来是需要装这个：</p>
<pre><code>npm install hexo-deployer-git --save
</code></pre><p>再执行，出现以下提示，说明部署完成：</p>
<pre><code>[info] Deploy done: git
</code></pre><p>点击 Github 上项目的 Settings，GitHub Pages，提示Your site is published at <a href="https://rexking6.github.io/" target="_blank" rel="external">https://rexking6.github.io/</a> (这是我自己的)</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>在搭建博客的过程中，发现hexo真是简单好用啊，对于我这种没学过前端的，真是神器啊。也体会到了github能部署网站的厉害之处，之后想把两个网站来作个部署记录，还有绑定阿里域名和图床，也都会写出来。</p>
]]></content:encoded>
      
      <comments>http://yoursite.com/2017/03/27/hexo%E6%90%AD%E5%BB%BAgithub%E6%8A%80%E6%9C%AF%E5%8D%9A%E5%AE%A2/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
